    graph TD


        %% ORCHESTRATION [O]
        
        subgraph Orchestration ["ORCHESTRATION"]

            %% O NODE

            Airflow["<b>Airflow</b>
            <em>(container)</em>"]
            
            SpacerO[ ]:::hidden
        end




        %% DATA INGESTION [DI]
        subgraph DataIngestion ["DATA INGESTION"]

            
            %% DI NODES
            
            DataDAG["<b>Data Preparation DAG</b>"]
            
            PostgreSQL[("<b>PostgreSQL</b>
            Database <em>(container)</em>")]
            
            MinIO[("<b>MinIO</b>
            Object Storage <em>(container)</em>")]

            SpacerDI[ ]:::hidden
            

            %% DI EDGES 
            DataDAG -. "<em>batch upload of 2k products every 15min</em>" .-> DataDAG
            DataDAG --> PostgreSQL
            DataDAG -. "<em>(currently not used)</em>" .-> MinIO
            Airflow --> DataDAG
        end
        


        %% MONITORING & TRIGGERING [MaT]

        subgraph MonitoringTriggering ["MONITORING & TRIGGERING"]

            %% MaT NODES

            Prometheus["<b>Prometheus</b>
            <em>(container)</em>"]

            Accuracy["Accuracy Monitoring"]

            DataBacklog["Data Backlog"]

            DriftDetection["Drift Detection Evidently"]

            SmartTrigger["<b>Smart Trigger Mechanism</b>
            1. F1 < 0.7
            2. Backlog >= 10k"]
            
            RetrainTrigger{"Retraining Trigger"}

            SpacerMaT[ ]:::hidden


            %% MaT EDGES

            PostgreSQL --> Accuracy & DataBacklog

            PostgreSQL --> DriftDetection
            Accuracy --> SmartTrigger
            DataBacklog --> SmartTrigger
            DriftDetection --> SmartTrigger
            SmartTrigger --> RetrainTrigger
        end


        %% MACHINE LEARNING [ML]

        subgraph MachineLearning ["MACHINE LEARNING"]

            %% ML NODES

            MLDAG["<b>ML Pipeline DAG</b>"]


            MLContainer["<b>Model Training</b>
            <em>(container)</em>"]
            
            Training["<b>GridSearchCV</b>
            Model Training"]
            
            Evaluation["Model Evaluation"]
            
            MLflow[("<b>MLflow</b>
            Model Registry <em>(container)</em>")]

            SpacerML[ ]:::hidden
                        

            %% ML EDGES

            Airflow --> MLDAG
            MLDAG --> MLContainer
            MLContainer --> Prometheus & Training
            Training --> Evaluation
            Evaluation --> MLflow
            MLflow -- "<em>current best model</em>" --> MLContainer
            MLflow --> PostgreSQL
        end


        %% REAL-TIME SERVING [RTS]
        subgraph RealTimeServing ["REAL-TIME SERVING"]

            %% RTS NODES

            FastAPI["<b>FastAPI</b>
            <em>(container)</em>"]

            RealTimeRequests["Real Time Requests"]
            
            RealTimePredictions["Real Time Predictions"]

            SpacerRTS[ ]:::hidden
            

            %% RTS EDGES
            FastAPI --> Prometheus
            RealTimeRequests --> FastAPI
            FastAPI --> RealTimePredictions
            MLContainer --> FastAPI
        end


        %% Visualization [V]
        subgraph Visualization ["VISUALIZATION"]
            
            %% V NODES

            Grafana["<b>Grafana</b>
            <em>(container)</em>"]

            SpacerV[ ]:::hidden
            

            %% V EDGE
            Prometheus --> Grafana
        end

        %% LAYOUT: LOCK FLOWCHART
        SpacerO ~~~ SpacerDI & SpacerML
        SpacerDI ~~~ SpacerMaT
        SpacerML ~~~ SpacerMaT
        SpacerML ~~~ SpacerRTS
        SpacerML ~~~ SpacerV

        %% LAYOUT: EDGES BETWEEN COMPONENTS
        RetrainTrigger -. "<em>only if necessary</em>" .-> MLDAG


        %% STYLING

        %% Apply default styles to ALL nodes
        classDef default fill:#FFF,stroke:#333,stroke-width:2px;

        %% Apply default styles to ALL edges
        linkStyle default stroke:#999,stroke-width:2px,color:black;

        class Orchestration,Visualization invisibleSubgraph
        class MLContainer,FastAPI,Airflow,Prometheus,Grafana container
        class PostgreSQL,MinIO,MLflow storage
        class DataDAG,MLDAG service
        class Accuracy,DataBacklog,DriftDetection monitoring
        class SpacerO,SpacerDI,SpacerMaT,SpacerML,SpacerRTS,SpacerV spacer

        classDef invisibleSubgraph fill:transparent,stroke:none,stroke-width:0px;
        classDef container fill:#E0F2FE,stroke:#0369A1,stroke-width:2px
        classDef storage fill:#FEE2E2,stroke:#DC2626,stroke-width:2px
        classDef service fill:#ECFDF5,stroke:#059669,stroke-width:2px
        classDef monitoring fill:#FEF3C7,stroke:#D97706,stroke-width:2px
        classDef spacer fill:#FFF,stroke:#FFF,stroke-width:0px
        

